name: "Build"
on: [push, workflow_dispatch]
jobs:
  codeanalysis:
    name: "Code Quality"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint
        uses: ricardochaves/python-lint@v1.4.0
        continue-on-error: true
        with:
          python-root-list: "src"

  test:
    name: "Test"
    runs-on: ${{ matrix.os-version }}
    env:
      LANG: en_US.UTF-8
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
        os-version: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Ubuntu)
        if: matrix.os-version == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libkrb5-dev

      - name: Install dependencies (Common)
        run: |
          # Setup tox
          pip install --upgrade pip
          pip install tox tox-gh-actions codecov

      - name: Run Tests
        run: |
          tox
          codecov


  gh-pages:
    name: "Build Documentation"
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') # run only on tagged commits

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Setup environment
        run: |
          mv doc docs
          sudo apt-get install build-essential
          pip install sphinx six

      - name: Check documentation
        uses: ammaraskar/sphinx-problem-matcher@master

      - name: Build documentation
        run: sphinx-build -Ean -b html -j auto -D todo_include_todos=0 ./docs ./docs/_build/html

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: html-docs
          path: ./docs/_build/html

  build:
    name: "Build Package"
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') # run only on tagged commits

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel

      - name: Archive artifacts
        # Archive distribution files for use by auto (or manual) PyPI upload
        uses: actions/upload-artifact@v2
        with:
          name: pypi-dist
          path: ./dist

  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    needs: [gh-pages, build]
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body: "Test Release"

      - name: Download a Documentation
        uses: actions/download-artifact@v2
        with:
          name: html-docs

      - name: Display structure of downloaded files
        run: ls -R

#      - name: Upload Documentation
#        uses: crazy-max/ghaction-github-pages@v2
#        with:
#          target_branch: gh-pages
#          build_dir: ./docs/_build/_html

#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
#          verbose: true

